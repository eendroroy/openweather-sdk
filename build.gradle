plugins {
    id "maven"
    id "maven-publish"
    id "signing"
    id "org.jetbrains.kotlin.jvm" version "1.3.72"
    id "com.jfrog.bintray" version "1.8.5"
}

repositories {
    mavenCentral()
    jcenter()
}

group = "com.github.eendroroy"
version = "0.1.1"
sourceCompatibility = "1.8"

dependencies {
    implementation "com.squareup.retrofit2:retrofit:2.8.1"
    implementation "com.squareup.retrofit2:converter-jackson:2.8.1"
    implementation "joda-time:joda-time:2.10.5"
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
    testImplementation "org.testng:testng:6.10"
    testImplementation "org.jetbrains.kotlin:kotlin-test:1.3.72"
}

task javadocJar(type: Jar) {
    archiveClassifier = "javadoc"
    from javadoc
}

task sourcesJar(type: Jar, dependsOn: classes) {
    archiveClassifier = "sources"
    from sourceSets.main.allSource
}

artifacts {
    archives javadocJar, sourcesJar
}

signing {
    sign configurations.archives
}

publishing {
    repositories {
        maven {
            name = "GitHubPackages"
            url = uri("https://maven.pkg.github.com/eendroroy/openweathermap-sdk")
            credentials {
                username = project.findProperty("gpr.user") ?: System.getenv("USERNAME")
                password = project.findProperty("gpr.key") ?: System.getenv("TOKEN")
            }
        }
    }
    publications {
        maven(MavenPublication) {
            from(components.java)
            artifact(sourcesJar)
        }
    }
}

bintray {
    user = project.findProperty("bintray.user") ?: System.getenv("BINTRAY_USER")
    key = project.findProperty("bintray.key") ?: System.getenv("BINTRAY_KEY")
    publications = ["maven"]
    pkg {
        repo = project.group
        name = project.name
        userOrg = user
        licenses = ["MIT"]
        vcsUrl = "https://github.com/eendroroy/openweathermap-sdk.git"
        labels = ["openweathermap-api"]
        publicDownloadNumbers = true
        version {
            name = project.version
            desc = "openweathermap-api"
        }
    }
}

uploadArchives {
    repositories {
        mavenDeployer {
            beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

            repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
                authentication(userName: ossrhUsername, password: ossrhPassword)
            }

            snapshotRepository(url: "https://oss.sonatype.org/content/repositories/snapshots/") {
                authentication(userName: ossrhUsername, password: ossrhPassword)
            }

            pom.project {
                name project.name
                packaging "jar"
                description "openweathermap-api"
                url "https://github.com/eendroroy/openweathermap-sdk.git"

                scm {
                    connection "scm:git:https://github.com/eendroroy/openweathermap-sdk.git"
                    developerConnection "scm:git:https://github.com/eendroroy/openweathermap-sdk.git"
                    url "https://github.com/eendroroy/openweathermap-sdk.git"
                }

                licenses {
                    license {
                        name "MIT"
                        url "http://opensource.org/licenses/MIT"
                    }
                }

                developers {
                    developer {
                        id "eendroroy"
                        name "indrajit"
                        email "eendroroy@gmail.com"
                    }
                }
            }
        }
    }
}

tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
}

test {
    useTestNG()
}
