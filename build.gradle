plugins {
    id 'maven-publish'
    id 'org.jetbrains.kotlin.jvm' version '1.3.72'
    id "com.jfrog.bintray" version "1.8.5"
}

repositories {
    mavenLocal()
    maven {
        url = 'https://jcenter.bintray.com'
    }
}

group = 'com.github.eendroroy'
version = '0.1.0'
sourceCompatibility = '1.8'

dependencies {
    implementation 'com.squareup.retrofit2:retrofit:2.8.1'
    implementation 'com.squareup.retrofit2:converter-jackson:2.8.1'
    implementation 'joda-time:joda-time:2.10.5'
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
    testImplementation 'org.testng:testng:6.10'
    testImplementation 'org.jetbrains.kotlin:kotlin-test:1.3.72'
}

task sourcesJar(type: Jar, dependsOn: classes) {
    archiveClassifier = 'sources'
    from sourceSets.main.allSource
}

artifacts {
    archives sourcesJar
}

publishing {
    repositories {
        maven {
            name = "GitHubPackages"
            url = uri("https://maven.pkg.github.com/eendroroy/openweathermap-sdk")
            credentials {
                username = project.findProperty("gpr.user") ?: System.getenv("USERNAME")
                password = project.findProperty("gpr.key") ?: System.getenv("TOKEN")
            }
        }
    }
    publications {
        maven(MavenPublication) {
            from(components.java)
        }
        binTray(MavenPublication) {
            from(components.java)
            artifact(sourcesJar)
        }
        gpr(MavenPublication) {
            from(components.java)
        }
    }
}

bintray {
    user = project.findProperty("bintray.user") ?: System.getenv("BINTRAY_USER")
    key = project.findProperty("bintray.key") ?: System.getenv("BINTRAY_KEY")
    publications = ["binTray"]
    pkg {
        repo = project.group
        name = project.name
        userOrg = user
        licenses = ["MIT"]
        vcsUrl = "https://github.com/eendroroy/openweathermap-sdk.git"
        labels = ["otp-generator"]
        publicDownloadNumbers = true
        version {
            name = project.version
            desc = "OTP generator"
        }
    }
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

test {
    useTestNG()
}
